{"mappings":"YAAO,IAAMA,EAAO,CAChBC,KAAMC,SAASC,cAAc,mBC0BjCC,EAAe,CACbC,KA5BW,SAACC,EAAKC,GACjB,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAwBzCC,KApBS,SAAAV,GACX,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAgB3CK,OAZa,SAAAd,GACb,IACCK,aAAaU,WAAWf,E,CAEvB,MAAOO,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,ICpBzCO,EAAa,GACXC,EAAY,sBAElBvB,EAAKC,KAAKuB,iBAAiB,SAE3B,SAAoBC,G,IAAAC,EAAAD,EAAEC,OACZC,EAAgBD,EAAhBC,KAAMpB,EAAUmB,EAAVnB,MAEde,EAAWK,GAAQpB,EACpBH,EAAQC,KAAKkB,EAAWD,E,IALzBtB,EAAKC,KAAKuB,iBAAiB,UAoB3B,SAAoBI,GAGlB,GAFAA,EAAMC,kBAEDP,EAAWQ,QAAUR,EAAWP,QAEnB,YADhBgB,MAAM,sBAGRjB,QAAQkB,IAAIV,GAEZtB,EAAKC,KAAKgC,QACVX,EAAa,GACflB,EAAQgB,OAAOG,E,IAvBf,WACE,IAAMW,EAAgB9B,EAAQY,KAAKO,GAEnC,GAAIW,EACF,IAAK,IAAIC,KAAMD,EACblC,EAAKC,KAAKkC,GAAI5B,MAAQ2B,EAAcC,GACpCb,EAAWa,GAAKD,EAAcC,E,CAIpCC,E","sources":["src/js/refs.js","src/js/storage.js","src/js/03-feedback.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector('.feedback-form'),\n};\n\n","const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error(\"Set state error: \", error.message);\n  }\n};\n\nconst load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nconst remove = key => {\n  try {\n   localStorage.removeItem(key);\n\n  } catch (error) {\n    console.error(\"Get state error: \", error.message);\n  }\n};\n\nexport default {\n  save,\n    load,\n  remove,\n};","import { refs } from \"./refs\";\nimport storage from \"./storage\";\n\nlet feedbackEl = {};\nconst LOCAL_KEY = \"feedback-form-state\";\n\nrefs.form.addEventListener('input', onSaveForm);\nrefs.form.addEventListener('submit', onSendForm)\nfunction onSaveForm({ target }) {\n  const { name, value } = target\n  \n  feedbackEl[name] = value  \n storage.save(LOCAL_KEY, feedbackEl)\n};\n\nfunction loadFeedback() {\n  const savedFeedback = storage.load(LOCAL_KEY);\n  // console.log(savedFeedback);\n  if (savedFeedback) {\n    for (let el in savedFeedback) {\n      refs.form[el].value = savedFeedback[el];\n      feedbackEl[el]= savedFeedback[el]\n  }\n}\n};\nloadFeedback()\n\nfunction onSendForm(event) {\n  event.preventDefault();\n\n  if (!feedbackEl.email || !feedbackEl.message) {\n    alert('Заповніть усі поля');\n    return\n  } \n  console.log(feedbackEl);\n\n  refs.form.reset();\n  feedbackEl = {};\nstorage.remove(LOCAL_KEY)\n\n}\n// // Отримайте посилання на елементи форми\n// const emailInput = form.elements.email;\n// const messageInput = form.elements.message;\n\n// // Отримайте збережені дані з локального сховища при завантаженні сторінки\n// const savedData = JSON.parse(localStorage.getItem(\"feedback-form-state\"));\n\n// // Заповніть поля форми збереженими даними або залиште їх порожніми\n// emailInput.value = savedData ? savedData.email : \"\";\n// messageInput.value = savedData ? savedData.message : \"\";\n\n// // Встановіть обробник події \"input\" на форму з використанням throttle\n// form.addEventListener(\"input\", throttle(saveFormData, 500));\n\n// // Збереження даних форми у локальне сховище\n// function saveFormData() {\n//   const formData = {\n//     email: emailInput.value,\n//     message: messageInput.value,\n//   };\n\n//   localStorage.setItem(\"feedback-form-state\", JSON.stringify(formData));\n// }\n\n// // Обробник події \"submit\" для форми\n// form.addEventListener(\"submit\", (event) => {\n//   event.preventDefault();\n\n//   // Очищення локального сховища та полів форми\n//   localStorage.removeItem(\"feedback-form-state\");\n//   emailInput.value = \"\";\n//   messageInput.value = \"\";\n\n//   // Виведення даних форми у консоль\n//   console.log(\"Form Data:\", {\n//     email: emailInput.value,\n//     message: messageInput.value,\n//   });\n// });\n"],"names":["$37e33676934ad046$export$21666b427502ea6d","form","document","querySelector","$e40a24b7fc93604f$export$2e2bcd8739ae039","save","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","load","getItem","undefined","parse","remove","removeItem","$b00c40859be242c5$var$feedbackEl","$b00c40859be242c5$var$LOCAL_KEY","addEventListener","param","target","name","event","preventDefault","email","alert","log","reset","savedFeedback","el","$b00c40859be242c5$var$loadFeedback"],"version":3,"file":"03-feedback.d58b2210.js.map"}